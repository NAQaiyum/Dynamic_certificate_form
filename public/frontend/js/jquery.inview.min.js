! function($) {
    let a = [],
        b = "undefined" != typeof IntersectionObserver,
        c, d, e, f;

    function g() {
        if (!a.length) return;
        let h = $.map(a, function(a) {
                let b = a.data.selector,
                    c = a.$element;
                return b ? c.find(b) : c
            }),
            i, j, g;
        d = d || (!(g = {
            height: window.innerHeight,
            width: window.innerWidth
        }).height && ((i = document.compatMode) || !$.support.boxModel) && (g = {
            height: (j = "CSS1Compat" === i ? document.documentElement : document.body).clientHeight,
            width: j.clientWidth
        }), g), e = e || {
            top: window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop,
            left: window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft
        };
        for (let c = 0; c < a.length; c++) {
            if (!$.contains(document.documentElement, h[c][0])) continue;
            let b = $(h[c]),
                k = {
                    height: b[0].offsetHeight,
                    width: b[0].offsetWidth
                },
                f = b.offset(),
                l = b.data("inview");
            if (!e || !d) return;
            f.top + k.height > e.top && f.top < e.top + d.height && f.left + k.width > e.left && f.left < e.left + d.width ? l || b.data("inview", !0).trigger("inview", [!0]) : l && b.data("inview", !1).trigger("inview", [!1])
        }
    }
    $.event.special.inview = {
        add: function(d) {
            a.push({
                data: d,
                $element: $(this),
                element: this
            }), b || c || !a.length || (c = setInterval(g, 250)), b && (f || (f = new IntersectionObserver(function(a) {
                a.forEach(function(a) {
                    a.isIntersecting ? $(a.target).data("inview", !0).trigger("inview", [!0]) : $(a.target).data("inview", !1).trigger("inview", [!1])
                })
            }, {
                threshold: [0]
            })), f.observe(this))
        },
        remove: function(e) {
            for (let d = 0; d < a.length; d++)
                if (a[d].element === this && a[d].data.guid === e.guid) {
                    b && f && f.unobserve(this), a.splice(d, 1);
                    break
                }
            c && !a.length && (clearInterval(c), c = null)
        }
    }, $(window).on("scroll resize scrollstop", function() {
        d = e = null
    })
}(jQuery)